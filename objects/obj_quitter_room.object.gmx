<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_evencare_mask</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// add general room
room1 = d3d_model_create();
d3d_model_load(room1,"under_nmp\ext_further\quitter_room\unmp_quitters_room.gmmod");
clock = d3d_model_create();
d3d_model_load(clock,"under_nmp\ext_further\quitter_room\unmp_quitters_room_clock.gmmod");
clocktex = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(surface_exists(clocktex)) {
    surface_set_target(clocktex);
    var mang = -(current_minute * 6)//+90;
    var hang = -(current_hour * 30)//+90;
    var sang = -(current_second * 6)//+90;
    var wid = 2
    draw_sprite(spr_quitters_clock,0,0,0);
    draw_set_color(c_black);
    draw_sprite_ext(spr_clock_hand,0,48,48,wid,7,hang,c_black,1);
    draw_sprite_ext(spr_clock_hand,0,48,48,wid,14,mang,c_black,1);
    //draw_sprite_ext(spr_clock_hand,0,48,48,wid,16,sang,c_black,1);
    //draw_line_width(48,48,lengthdir_x(28,mang)+48,lengthdir_y(28,mang)+48,wid)
    //draw_line_width(48,48,lengthdir_x(14,hang)+48,lengthdir_y(14,hang)+48,wid)
    //draw_triangle(lengthdir_x(wid,mang+90)+48,lengthdir_y(wid,mang+90)+48,lengthdir_x(28,mang)+48,lengthdir_y(28,mang)+48,lengthdir_x(wid,mang-90)+48,lengthdir_y(wid,mang-90)+48,false)
    //draw_triangle(lengthdir_x(wid,hang+90)+48,lengthdir_y(wid,hang+90)+48,lengthdir_x(14,hang)+48,lengthdir_y(14,hang)+48,lengthdir_x(wid,hang-90)+48,lengthdir_y(wid,hang-90)+48,false)
    //draw_triangle(lengthdir_x(wid,sang+90)+48,lengthdir_y(wid,sang+90)+48,lengthdir_x(32,sang)+48,lengthdir_y(32,sang)+48,lengthdir_x(wid,sang-90)+48,lengthdir_y(wid,sang-90)+48,false)
    draw_set_color(c_white);
    surface_reset_target();
    
} else {
    surface_set_target(clocktex); //Draw what is currently visible to our custom surface
    clocktex = surface_create(96,96);
    surface_reset_target();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white)
draw_set_colour_write_enable(true,true,true,false)
d3d_model_draw(room1,0,0,0,sprite_get_texture(spr_quitters_room,0));
d3d_model_draw(clock,0,0,0,surface_get_texture(clocktex));
shader_reset();
d3d_model_draw(room1,0,0,1,sprite_get_texture(spr_quitters_room,1));
draw_set_colour_write_enable(true,true,true,true)
if(obj_player_rpg.x &gt; 0) {
global.ccx = (obj_player_rpg.x-96)*2
global.ccx = clamp(global.ccx,0,176)
} else {
global.ccx = (obj_player_rpg.x+96)*2
global.ccx = clamp(global.ccx,-176,0)
}
global.ccy = 188.20;
global.ccz = 127.50;
global.pitch = 20.5

global.clx = obj_player_rpg.x;
global.cly = obj_player_rpg.y;
global.clz = obj_player_rpg.z;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
