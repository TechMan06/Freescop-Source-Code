<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-7</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>titlelogo = d3d_model_create();
d3d_model_load(titlelogo,"title\titlescreen.gmmod");

road = d3d_model_create();
d3d_model_load(road,"title\roadrail.gmmod");

rail = -86;
indx = 0;

logoposx = 3;
logoposy = -46;
logoposz = 79;

mover = 0;
anim_step = 0;
timer_flash = 0;

nf = 0
nx = 0

loadtimer = 0;
movementanim = 0;
movetimer = 0;
scale = 100;

demo_timer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>demo_timer++;

if(demo_timer &gt;= 7200/4 &amp;&amp; anim_step = 0) {

if(file_exists("recordings/demodat.dat")) {

if(file_exists("recordings/demopieces.dat")) {

ds_map_destroy(obj_manager.save_data);
obj_manager.save_data = ds_map_secure_load("recordings/demopieces.dat");

if !(ds_exists(obj_manager.save_data,ds_type_map)) {
file_delete("recordings/demopieces.dat");
} else {
    with(obj_manager) {
        global.pieces = ds_map_find_value(obj_manager.save_data,"pieces")
        global.nmp = ds_map_find_value(obj_manager.save_data,"panicsv");
    }
}
}

var tempdat = ds_map_secure_load("recordings/demodat.dat");
if !(ds_exists(tempdat,ds_type_map)) {
file_delete("recordings/demodat.dat");
demo_timer = 0;
} else {
if(!instance_exists(obj_fade)) {
var transition = instance_create(x,y,obj_fade);
transition.fade_color = ds_map_find_value(tempdat,"lastfade")
transition.target_room = asset_get_index(ds_map_find_value(tempdat,"room"));
transition.transition_time = ds_map_find_value(tempdat,"lasttranstime")
transition.fade_spr = ds_map_find_value(tempdat,"lastfadespr")
transition.fadein = 56;
transition.fadeout = ds_map_find_value(tempdat,"fadeout");
obj_player_rpg.fadedir = asset_get_index(ds_map_find_value(tempdat,"prot"));
obj_player_rpg.rot = asset_get_index(ds_map_find_value(tempdat,"prot"));
obj_player_rpg.doorsteps = false;
obj_player_rpg.cam_x = ds_map_find_value(tempdat,"newfile");
obj_player_rpg.player_x = ds_map_find_value(tempdat,"x");
obj_player_rpg.player_y =ds_map_find_value(tempdat,"y");
global.replaying = true;
}
}
}
}
mover = scr_approach(mover,32,1);

if(mover &gt;= 32) {
mover = 0;
}

/*if(global.start_key &amp;&amp; !instance_exists(obj_fade)) {
global.recording = true;
var transition = instance_create(0,0,obj_fade);
transition.target_room = rm_giftplane;
transition.fade_color = c_white;
transition.transition_time = 530
transition.fade_spr = 1;
transition.fadein = 56;
transition.fadeout = 56;
obj_player_rpg.player_x = 8*32-1+24
transition.dir = "down";

obj_player_rpg.cam_x = 91.6/2;


}

if(keyboard_check(vk_up)) {
global.cly -= 1;
}
if(keyboard_check(vk_down)) {
global.cly += 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///3d things
var roty = sin((global.t/room_speed)*7.5)*12
var rotz = sin((global.t/room_speed)*6)*10
d3d_transform_add_rotation_y(rotz);
d3d_transform_add_rotation_z(roty);
d3d_transform_add_scaling(scale/100,1,1);
d3d_transform_add_translation(logoposx+(nx/2),logoposy,logoposz);
shader_set(shd_petscop_logo);
d3d_model_draw(titlelogo,0,0,0,sprite_get_texture(spr_logo,0));
shader_reset();
d3d_transform_set_identity();
d3d_transform_add_rotation_x(-global.pitch);
d3d_transform_add_rotation_y(scr_sine(2,10));
d3d_transform_add_scaling(.6,.6,.6);
d3d_transform_add_translation(nx*.8,-88,logoposz-5.6);
d3d_draw_wall(-44,0,42,44,0,-42,sprite_get_texture(spr_gift_box,0),1,1);
if(global.gfx = true) {
shader_set(shPSXLight);
}
d3d_transform_set_identity();
d3d_transform_add_translation(obj_camera_management.x-mover,rail,0)
d3d_model_draw(road,0,-128,0,sprite_get_texture(spr_road,0));
d3d_model_draw(road,32,-128,0,sprite_get_texture(spr_road,0));
d3d_model_draw(road,64,-128,0,sprite_get_texture(spr_road,0));
d3d_model_draw(road,64+32,-128,0,sprite_get_texture(spr_road,0));
d3d_model_draw(road,64+64,-128,0,sprite_get_texture(spr_road,0));
d3d_model_draw(road,64+64+32,-128,0,sprite_get_texture(spr_road,0));
d3d_model_draw(road,64+64+64,-128,0,sprite_get_texture(spr_road,0));
d3d_model_draw(road,64+64+64+32,-128,0,sprite_get_texture(spr_road,0));
d3d_model_draw(road,64+64+64+64,-128,0,sprite_get_texture(spr_road,0));

d3d_model_draw(road,-32,-128,0,sprite_get_texture(spr_road,0));
d3d_model_draw(road,-64,-128,0,sprite_get_texture(spr_road,0));
d3d_model_draw(road,-64-32,-128,0,sprite_get_texture(spr_road,0));
d3d_model_draw(road,64-64,-128,0,sprite_get_texture(spr_road,0));
d3d_model_draw(road,64-64-32,-128,0,sprite_get_texture(spr_road,0));
d3d_model_draw(road,64-64-64,-128,0,sprite_get_texture(spr_road,0));
d3d_model_draw(road,64-64-64-32,-128,0,sprite_get_texture(spr_road,0));
d3d_model_draw(road,64-64-64-64,-128,0,sprite_get_texture(spr_road,0));
d3d_model_draw(road,64-64-64-64-32,-128,0,sprite_get_texture(spr_road,0));
d3d_model_draw(road,64-64-64-64-64,-128,0,sprite_get_texture(spr_road,0));
d3d_model_draw(road,64-64-64-64-64-32,-128,0,sprite_get_texture(spr_road,0));
d3d_transform_set_identity();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///2d things
shader_reset();
d3d_set_projection_ortho(0, 0, global.gamewidth, global.gameheight, 0);
draw_set_halign(fa_middle)
draw_text_colour(162+nx,210-3,"Â© 1997 Garalina",c_black,c_black,c_black,c_black,1);

draw_set_blend_mode(bm_normal);
if(anim_step = 0) {
timer_flash++;
if(timer_flash &lt; 30) draw_sprite(spr_title_screen_buttons,0,162,167)
if(timer_flash &gt; 60) timer_flash = 0;

if(global.start_pressed &amp;&amp; !instance_exists(obj_fade)) {
anim_step = 1;
timer_flash = 0;
audio_play_sound(snd_press_start,2,false);
}

}

if(anim_step = 1) {
timer_flash++;
if(timer_flash &lt; 30) draw_sprite(spr_title_screen_buttons,1,162,167)
if(timer_flash &gt; 60) timer_flash = 0;

loadtimer += 1;
if(loadtimer &gt; 60*3) {
anim_step = 2
}
}

if(anim_step = 2) {
//movetimer++;
//movementanim = clamp(scr_ease_in_out(movetimer,0,20,30),-300,30)
//scale = scr_approach(scale,10,10/100);


nf++;


if(nf = 0) {
nx = 0 
scale = 100}
if(nf = 2) {
nx += 3.9/3 
scale = 100.6};
if(nf = 4) {
nx += 11.5/3 
scale = 101.2};
if(nf = 6) {
nx += 15.1/3 
scale = 105
audio_play_sound(snd_loaded_files_whee,10,false);
};
if(nf = 8) {
nx += 16/3 
scale = 110.3};
if(nf = 10) {
nx += 14.2/3 
scale = 115};
if(nf = 12) {
nx += 8/3 
scale = 120.8};
if(nf = 14) {
nx += 6.2/3 
scale = 122.7};
if(nf = 16) {
nx += -6/3 
scale = 124.2};
if(nf = 18) {
nx += -18/3 
scale = 124.2};
if(nf = 20) {
nx += -32.8/3 
scale = 122.7};
if(nf = 22) {
nx += -47.9/3 
scale = 120.1};
if(nf = 24) {
nx += -68.4/3 
scale = 117.4};
if(nf = 26) {
nx += -90.5/3 
scale = 108};
if(nf = 28) {
nx += -118/3 
scale = 100};
if(nf = 30) {
nx += -142.8/3 
scale = 70.5};
if(nf = 32) {
nx += -143.5/3 
scale = 34.5};
//logo is gone
if(nf = 34) nx += -117.6/3
if(nf = 36) nx += -89.9/3
if(nf = 38) nx += -68.7/3
if(nf = 40) nx += -20.40
if(nf = 42) nx += -48.9/3
if(nf = 44) nx += -31.1/3
if(nf = 46) nx += -17.4/3
if(nf = 48) nx += -5.2/3
if(nf = 50) nx += 3.3/3
if(nf = 52) nx += 10.4/3
if(nf = 54) nx += 14.6/3
if(nf = 56) nx += 13.6/3
if(nf = 58) nx += 15.5/3
if(nf = 60) nx += 13.2/3
if(nf = 62) nx += 2.4/3
if(nf &gt;= 64) {
    nx = -320
}

if(global.triangle_pressed &amp;&amp; nf &gt;= 90 &amp;&amp; obj_save_loader.stage = 0) {
anim_step = 3
nf = 64
}


}

if(anim_step = 3) {

nf--

if(nf = 0) {
nx = 0 
scale = 100
loadtimer = 0;
demo_timer = 0;
anim_step = 0;
}
if(nf = 2) {
nx += -3.9/3 
scale = 100.6};
if(nf = 4) {
nx += -11.5/3 
scale = 101.2};
if(nf = 6) {
nx += -15.1/3 
scale = 105
};
if(nf = 8) {
nx += -16/3 
scale = 110.3};
if(nf = 10) {
nx += -14.2/3 
scale = 115};
if(nf = 12) {
nx += -8/3 
scale = 120.8};
if(nf = 14) {
nx += -6.2/3 
scale = 122.7};
if(nf = 16) {
nx += 6/3 
scale = 124.2};
if(nf = 18) {
nx += 18/3 
scale = 124.2};
if(nf = 20) {
nx += 32.8/3 
scale = 122.7};
if(nf = 22) {
nx += 47.9/3 
scale = 120.1};
if(nf = 24) {
nx += 68.4/3 
scale = 117.4};
if(nf = 26) {
nx += 90.5/3 
scale = 108};
if(nf = 28) {
nx += 118/3 
scale = 100};
if(nf = 30) {
nx += 142.8/3 
scale = 70.5};
if(nf = 32) {
nx += 143.5/3 
scale = 34.5};
//logo is gone
if(nf = 34) nx += 117.6/3
if(nf = 36) nx += 89.9/3
if(nf = 38) nx += 68.7/3
if(nf = 40) nx += 20.40
if(nf = 42) nx += 48.9/3
if(nf = 44) nx += 31.1/3
if(nf = 46) nx += 17.4/3
if(nf = 48) nx += 5.2/3
if(nf = 50) nx += -3.3/3
if(nf = 52) nx += -10.4/3
if(nf = 54) nx += -14.6/3
if(nf = 56) nx += -13.6/3
if(nf = 58) {
nx += -15.5/3
audio_play_sound(snd_loaded_files_whee,10,false);
}
if(nf = 60) nx += -13.2/3
if(nf = 62) nx += -2.4/3
if(nf = 64) nx = -320

}
if(global.gfx = true) {
shader_set(shPSXLight);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
