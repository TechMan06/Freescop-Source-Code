<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>question = "";

select_x = 0;
select_y = 0;
row = 0;
coloumn = 0; 

frame = 0;

up = 0;
fade = 0;

type = 0;

stage = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour_write_enable(true,true,true,false)
draw_set_halign(fa_left);
draw_set_valign(fa_top);
shader_reset();
d3d_set_projection_ortho(0, 0, global.gamewidth, global.gameheight, 0);
    
    if(row &gt;= 13) {
    row = 0;
    coloumn ++;
    select_y = coloumn*20
    select_x = -1*16
    }
    if(row &lt;= -1) {
    row = 12;
    coloumn --;
    select_y = coloumn*20
    select_x = 13*16
    }
    
    if(coloumn &gt;= 6) {
    coloumn = 0;
    select_y = (coloumn*20)-20
    select_x = row*16
    }
    if(coloumn &lt;= -1) {
    coloumn = 5;
    select_y = (coloumn*20)+20
    select_x = row*16
    }
    
    select_x += ((row*16 -select_x) / 3);
    select_y += ((coloumn*20 -select_y) / 3);
    if(frame &gt;= 28) {
    if(global.up_pressed) {
    coloumn-= 1
    }
    if(global.down_pressed) {
    coloumn+= 1
    }
    if(global.left_pressed) {
    row-= 1
    }
    if(global.right_pressed) {
    row+= 1
    }
    
    if(global.action_pressed &amp;&amp; keyboard_get_key(row,coloumn) != "DEL" &amp;&amp; string_width(question+"?") &lt; 332/2) {
    question += keyboard_get_key(row,coloumn);
    } else if(global.action_pressed &amp;&amp; keyboard_get_key(row,coloumn) = "DEL") {
    question = string_copy(question,0,string_length(question)-1);
    }
    }
        draw_sprite_ext(spr_fade,0,0,0,1,1,0,c_black,fade);
        
    draw_sprite(spr_tool_keyboard,type,0,320-up);
    draw_sprite_part(spr_tool_keyboard,2,select_x+56,select_y+56+16,15,19,select_x+56,select_y+320-up+56+16);
    draw_set_color(c_white)
    draw_set_font(fnt_petscop);
    draw_text(57, 320-up+28+15,"Ask: " + question + "?");
    
    if(global.triangle_pressed || global.start_pressed) {
    stage = 1;
    }
    
    up = ease_inout_sine(0,320,frame/28);
    
    if(stage = 0) {
    if(!instance_exists(obj_fade)) {
    fade = scr_approach(fade,1,1/12);
    }
    if(fade &gt;= 1) {
    frame = scr_approach(frame,28,1);
    }
    
    } else {
    
    frame = scr_approach(frame,0,1);
    
    if(frame &lt;= 0) {
    fade = scr_approach(fade,0,1/12);
    }
    
    if(fade &lt;= 0) {
    if(question != "") {
    
    if(instance_exists(obj_tool)) {
    if(string_lower(question) = "who is tiara") {
    obj_tool.new_question = "4";
    } else if(string_lower(question) = "where am i") {
    obj_tool.new_question = "8";
    } else if(string_lower(question) = "who am i") {
    obj_tool.new_question = "5";
    } else if(string_lower(question) = "who are you") {
    obj_tool.new_question = "1";
    } else if(string_lower(question) = "remember being born") {
    obj_tool.new_question = "3";
    } else if(string_lower(question) = "where is my house") {
    obj_tool.new_question = "6";
    } else if(string_lower(question) = "where is the school") {
    obj_tool.new_question = "7";
    } else if(string_lower(question) = "pizza time") {
    obj_tool.new_question = "9";
    } else if(string_length(question) &gt; 0) {
    obj_tool.new_question = "0";
    }
    
    if(string_length(question) &gt; 0) {
    obj_tool.timer = 0;
    }
    
    }
    
    }
    
    instance_destroy();
    }
    
    }
    draw_set_colour_write_enable(true,true,true,true)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
