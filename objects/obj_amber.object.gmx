<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_amber</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>z = 0;
incage = 0;
mycage = 1;
my_x = x;
steps = 0;

new_x = x;

dist = 240;

anim = 0;

cananim = false;

catchrate = 0;

scale = 1;
rot = 0;

caught = false; 

key = save_data_pet_key();

var _save_data = ds_map_find_value(obj_manager.save_data,key);
if(!is_undefined(_save_data) &amp;&amp; _save_data==true) {
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///manage which cage amber is in.
if(!global.paused) {

//goto new cage
if(x != new_x) {
cananim = true;
}

if(x != new_x &amp;&amp; anim &gt; 11 &amp;&amp; anim &lt; 72) {
steps += 1;
incage = 1;
x = scr_approach(x,new_x,4);
z = abs(scr_sine_so(1,128,steps));
} else if (anim &gt; 82) {
incage = 0;
steps = 0
}
if(cananim = true) {
anim++;
catchrate = 0;
if(anim &gt; 93) {
anim = 0;
cananim = false;
}

} else {

catchrate++;
}

if(anim = 6) {
audio_play_sound(snd_amber_leap,20,false);
}


if(anim &gt; 72) {
if(!audio_is_playing(snd_amber_impact)) {
audio_play_sound(snd_amber_impact,20,false);
}
global.ccz = (3.875*32) + scr_sine(20,4);
} else {
global.ccz = (3.875*32)
}

//anim = clamp(anim,0,43);

//amber ai shit
if(global.amberclosed1 &amp;&amp; global.amberclosed2) {
    //do nothing
    catchrate = 0;
} else if(!global.amberclosed1 &amp;&amp; !global.amberclosed2) {
    //detect for player
    catchrate = 0;
    if(mycage = 1 &amp;&amp; distance_to_point(obj_player_rpg.x,obj_player_rpg.y) &lt; 96 &amp;&amp; x = my_x) {
    new_x = my_x + dist;
    mycage = 2;
    }
    
    if(mycage = 2 &amp;&amp; distance_to_point(obj_player_rpg.x,obj_player_rpg.y) &lt; 96 &amp;&amp; x = my_x + dist) {
    new_x = my_x
    mycage = 1;
    }

} else if(!global.amberclosed1 &amp;&amp; global.amberclosed2) {
    new_x = my_x + dist;
    mycage = 2;
} else if(global.amberclosed1 &amp;&amp; !global.amberclosed2) {
    new_x = my_x;
    mycage = 1;
}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_white);
d3d_transform_add_rotation_x(-global.pitch);
d3d_transform_add_rotation_z(global.dir+rot);
d3d_transform_add_scaling(scale,scale,scale);
d3d_transform_add_translation(x,y,z+48);
d3d_draw_wall(-48,0,48,48,0,-48,sprite_get_texture(sprite_index,clamp(anim,0,83)),1,1);
d3d_transform_set_identity();

if(incage = 0) {
z = abs(scr_sine(2.5,8));
} else if(incage = 1) {
//z = 0;
}

if(z &lt;= 8 &amp;&amp; catchrate &gt; 30 &amp;&amp; place_meeting(x,y,obj_player_rpg)) {
caught = true;
}

if(caught = true) {
if(scale = 1) {
audio_play_sound(snd_amber_caught,10,false);
}
scale = scr_approach(scale,0,0.05555555555/2);
rot = scr_approach(rot,90,5/2);

if(scale = 0) {
instance_create(0,0,obj_caught);
ds_map_replace(obj_manager.save_data,key,true);
instance_destroy();
}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
