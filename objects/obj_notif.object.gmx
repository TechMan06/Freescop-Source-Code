<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_sign_collision</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_speaker</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// initalize the sign
event_inherited();

//model
signbox = d3d_model_create();
d3d_model_load(signbox,"General_Objects\sign.gmmod");

signbox2 = d3d_model_create();
d3d_model_load(signbox2,"General_Objects\rm2sign.gmmod");


// dialog object
dialog_object = obj_dialogue;

// dialog
type = 0;
vis = true;
text[0] = "Uhoh...#This is a broken Textbox!"
text_display[0] = "[$=c_red]Uhoh...#[$=c_orange]This is a broken Textbox!"
boxcolor = c_white;
z = 0;
rot = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initalize the notification
notify = false;
h = 64;
notifyscale = 48;
scale = 0;
up = 0;
wiggle = 0;
notifymod = d3d_model_create();
d3d_model_load(notifymod,"General_Objects\notify.gmmod");

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///collided with player
if(place_meeting(x,y, obj_player_rpg)) {
notify = true;
} else {
notify = false;
}
if(global.paused = false) {
//animate the notify boxes
if (notify = true &amp;&amp; scale &lt; notifyscale) {
    scale += 6
} else if (notify = false &amp;&amp; scale &gt; 0){
    scale -= 6
}

if(notify == true &amp;&amp; scale == 6) {
    audio_play_sound(snd_notify,6,false);
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw the sign
if(vis = true) {
if(boxcolor = c_white &amp;&amp; type = 0) {
draw_set_color(c_white)
d3d_transform_add_rotation_z(rot);

d3d_transform_add_translation(x,y-16,z);
d3d_model_draw(signbox,0,0,0,sprite_get_texture(spr_giftplane_sign,0));
d3d_transform_set_identity();
} else if(boxcolor = c_black) {
draw_set_color(c_white);
d3d_transform_add_translation(x,y-16,z);
d3d_model_draw(signbox,0,0,0,sprite_get_texture(spr_dark_sign,0));
d3d_transform_set_identity();
} else if(type = 1) {
draw_set_color(c_white)
d3d_transform_add_rotation_z(rot);

d3d_transform_add_translation(x,y-16,z);
d3d_model_draw(signbox2,0,0,0,sprite_get_texture(spr_giftplane_sign,1));
d3d_transform_set_identity();
}


}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw the notification
if(room != rm_giftplane) {
up = sin(global.t*pi*1.5/room_speed)*12;
wiggle = sin(global.t*pi*1/room_speed)*15;

d3d_transform_add_rotation_y(wiggle);
d3d_transform_add_rotation_x(-global.pitch);
d3d_transform_add_rotation_z(global.dir);
d3d_transform_add_scaling(scale/48,scale/48,scale/48);

d3d_transform_add_translation(x,y-8,h+up+z);
d3d_model_draw(notifymod,0,0,0,sprite_get_texture(spr_note,0));
d3d_transform_set_identity();
} else {
up = sin(global.t*pi*1.5/room_speed)*12;
wiggle = sin(global.t*pi*1/room_speed)*15;

d3d_transform_add_rotation_y(wiggle);
d3d_transform_add_rotation_x(-global.pitch);
d3d_transform_add_rotation_z(global.dir);
d3d_transform_add_scaling(scale/48,scale/48,scale/48);

d3d_transform_add_translation(x,y-4,h+up+z);
d3d_model_draw(notifymod,0,0,0,sprite_get_texture(spr_note,1));
d3d_transform_set_identity();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
