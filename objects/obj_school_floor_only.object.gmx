<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_school_floor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>floor_tex = irandom_range(0,8);
ys = y/32
xs = x/32
depth = floor(point_distance(xs,ys,obj_player_fps.x/32,obj_player_fps.y/32))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var relativeX = x - obj_player_fps.x;
var relativeY = y - obj_player_fps.y;

var length = sqrt(dot_product(relativeX, relativeY, relativeX, relativeY));

var dirX = relativeX / length;
var dirY = relativeY / length;
// 0 to 1 only.
var cullingAngle = 0.6;

if(distance_to_object(obj_player_fps) &lt; 64) {
depth = floor(point_distance(xs,ys,obj_player_fps.x/32,obj_player_fps.y/32))
d3d_draw_floor(x,y+32,0,x+32,y,0,sprite_get_texture(spr_school_floor,floor_tex),1,1);
} else if(dot_product(dirX, dirY, scr_normalize(obj_player_fps.vect_x, obj_player_fps.vect_y), scr_normalize(obj_player_fps.vect_y, obj_player_fps.vect_x)) &lt; cullingAngle) {
//do nothing
} else 
if(distance_to_object(obj_player_fps) &lt; 352+64) {
depth = floor(point_distance(xs,ys,obj_player_fps.x/32,obj_player_fps.y/32))
d3d_draw_floor(x,y+32,0,x+32,y,0,sprite_get_texture(spr_school_floor,0),1,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
