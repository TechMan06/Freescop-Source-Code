<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initalize global variables and scripts
scr_game_setup();
discord_init_dll();
discord_init_app("495784436944601120")
d3d_start();
p3dc_init();
randomize(); 
vol = 1;
window_fullscreen = false;
reg_fullscreen = false;
rez = "960x720";
alph = 0;

//
save_data = ds_map_create();

var file = file_text_open_write("WARNING.txt");
file_text_write_string(file,"~~~ WARNING ~~~")
file_text_writeln(file);
file_text_writeln(file);
file_text_write_string(file,"Tampering with save files")
file_text_writeln(file);
file_text_write_string(file,"can possibly cause permanent")
file_text_writeln(file);
file_text_write_string(file,"deletion of the file!")
file_text_writeln(file);
file_text_writeln(file);
file_text_write_string(file,"Editing the demo may cause demo issues!")
file_text_writeln(file);
file_text_write_string(file,"If you do edit the demo")
file_text_writeln(file);
file_text_write_string(file,"deleting the key end_demo")
file_text_writeln(file);
file_text_write_string(file,"will prevent the demo from ending!")
file_text_close(file);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create and set the resolution
view_wport[0] = global.gamewidth;
view_hport[0] = global.gameheight;
view_wview[0] = 3;
view_hview[0] = 4;
display_set_gui_size(global.gamewidth*1, global.gameheight*1);
room_speed = 60;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///make default demo
if(!file_exists("demo.rec")) {
var file = file_text_open_write("demo.rec");
file_text_write_string(file,"11505 end_demo");
file_text_close(file);

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///fullscreen or not
if(window_get_height() != global.gameheight*global.zoom
    &amp;&amp; window_get_width() != global.gamewidth*global.zoom
    &amp;&amp; !window_get_fullscreen() &amp;&amp; !window_fullscreen)
{
    window_set_size(global.gamewidth*global.zoom, global.gameheight*global.zoom);
    surface_resize(application_surface, global.gamewidth, global.gameheight);
    display_reset(0, true);
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///zoom manager
//320
if(keyboard_check_pressed(ord('1')))
{
    global.zoom = 1
        rez = string(320*global.zoom) + "x" + string(240*global.zoom);
    alph = 1;
        if window_get_fullscreen()
    {
        window_set_fullscreen(false);
    }
    window_fullscreen = false;
}
//640
if(keyboard_check_pressed(ord('2')))
{
    global.zoom = 2
        rez = string(320*global.zoom) + "x" + string(240*global.zoom);
    alph = 1;
        if window_get_fullscreen()
    {
        window_set_fullscreen(false);
    }
    window_fullscreen = false;
}
//960
if(keyboard_check_pressed(ord('3')))
{
    global.zoom = 3
        rez = string(320*global.zoom) + "x" + string(240*global.zoom);
    alph = 1;
        if window_get_fullscreen()
    {
        window_set_fullscreen(false);
    }
    window_fullscreen = false;
}
//fullscreen toggle
if(keyboard_check_pressed(ord('5')) &amp;&amp; !window_fullscreen)
{
    if window_get_fullscreen()
    {
        window_set_fullscreen(false);
        rez = string(320*global.zoom) + "x" + string(240*global.zoom);
        alph = 1;
    } else {
        window_set_fullscreen(true);
        rez = "Regular Fullscreen";
        alph = 1;
    }
}
if(keyboard_check_pressed(ord('4')) &amp;&amp; !window_get_fullscreen())
{
    if window_fullscreen
    {
        window_fullscreen = false;
        rez = string(320*global.zoom) + "x" + string(240*global.zoom);
        alph = 1;
    } else {
        window_fullscreen = true;
        rez = "Windowed Fullscreen";
        alph = 1;
        window_set_size(display_get_width(), display_get_height());
    }
}
if(window_fullscreen = true) {
window_center();
}

if(keyboard_check_pressed(ord('6'))) {
global.ntsc = !global.ntsc
if(global.ntsc) {
rez = "NTSC Enabled";
} else {
rez = "NTSC Disabled";
}
alph = 1;
}

if(keyboard_check_pressed(ord('7'))) {
global.keyboard = !global.keyboard
if(global.keyboard) {
rez = "Input Keyboard";
} else {
rez = "Input PS1,PS2,PS3, and PS4";
}
alph = 1;
}

if(keyboard_check_pressed(ord('8'))) {
global.nmpicon = !global.nmpicon
if(global.nmpicon) {
rez = "Newmaker plane icons ON";
} else {
rez = "Newmaker plane icons OFF";
}
alph = 1;
}

if(keyboard_check_pressed(vk_f5) &amp;&amp; room != rm_bootup &amp;&amp; room != rm_title) {
    with(obj_manager) {
        ds_map_replace(obj_manager.save_data,"pieces",global.pieces)
        ds_map_replace(obj_manager.save_data,"room",room_get_name(room))
        ds_map_replace(obj_manager.save_data,"prot",sprite_get_name(obj_player_rpg.rot))
        ds_map_replace(obj_manager.save_data,"newfile",0)
        ds_map_replace(obj_manager.save_data,"panicsv",global.nmp)
        ds_map_replace(obj_manager.save_data,"x",obj_player_rpg.x)
        ds_map_replace(obj_manager.save_data,"y",obj_player_rpg.y)
        ds_map_replace(obj_manager.save_data,"z",obj_player_rpg.z)
        ds_map_replace(obj_manager.save_data,"trapdoor",global.secretdoor)
        ds_map_secure_save(save_data,ds_map_find_value(obj_manager.save_data,"saveto"));
    }
    rez = "Quick Save Complete!";
    alph = 1;
}

alph = scr_approach(alph,0,.01);
//room_speed = 60*global.zoom;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Error output
if(!instance_exists(obj_player_rpg) &amp;&amp; !instance_exists(obj_player_fps)) {
show_message("Error!" + string(room) + "Player not in room!");
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Global variable manager
if(global.paused = false) {
global.t++;
}
//are shaders working?
if(shader_is_compiled(psx) &amp;&amp; shader_is_compiled(shd_flash) &amp;&amp; shader_is_compiled(shPSXLight) &amp;&amp; shader_is_compiled(petscop_ntsc)) {
global.gfx = true;
}
//are shaders enabled?
if(global.ntsc_key &amp;&amp; global.ntsc = false) {
global.ntsc = true;
} else if(global.ntsc_key &amp;&amp; global.ntsc = true) {
global.ntsc = false;
}
//help the player fix shader error :)
if (global.gfx = false) {
if(global.start_key) {
url_open("https://www.microsoft.com/en-us/download/confirmation.aspx?id=8109");
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///reset the resolution just incase
view_wport[0] = global.gamewidth;
view_hport[0] = global.gameheight;
view_wview[0] = 3;
view_hview[0] = 4;
display_set_gui_size(global.gamewidth*1, global.gameheight*1);
room_speed = 60;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///clean up anything to prevent memory leaks
d3d_end();
p3dc_free();
discord_free_app();
discord_free_dll();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if gfx is not running then output error screen!
if (global.gfx = false) {
draw_set_halign(fa_center);
draw_set_valign(fa_center);
draw_set_font(fnt_petscop);
draw_set_colour(c_black);
draw_rectangle(0,0,320,240,false);
draw_set_colour(c_red);
draw_text_transformed(160,120,"PLEASE INSTALL#DIRECTX FROM JUNE 2010#TO FIX THIS ERROR!",1,1,0);
if(!instance_exists(obj_url_directx)) {
instance_create(x,y,obj_url_directx);
}
}
draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_text_colour(0,0,rez,c_lime,c_lime,c_green,c_green,alph);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
