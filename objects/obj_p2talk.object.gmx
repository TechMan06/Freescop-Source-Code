<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_talk_buttons</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>button_input = ds_list_create();
alpha = ds_list_create();
alphasub = ds_list_create();
height = ds_list_create();

btn_disp = "";
buttons = "";

;
x = -10000
scale = .5;
btnfnt = font_add_sprite(spr_talk_buttons,ord("0"),true,2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(button_input);
ds_list_destroy(alpha);
ds_list_destroy(alphasub);
ds_list_destroy(height);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(instance_exists(obj_fade) || room = rm_bootup || room = rm_title || instance_exists(obj_nifty) || instance_exists(obj_tool_txt_box)) {
instance_destroy();
}

if(!instance_exists(obj_p2talk) || instance_exists(obj_dialogue) || instance_exists(obj_picture) || global.paused) exit;

if(global.select_pressed &amp;&amp; btn_disp != "") {
ds_list_insert(button_input,0,buttons);
ds_list_insert(alpha,0,0);
ds_list_insert(alphasub,0,0);
ds_list_insert(height,0,0);
audio_play_sound(snd_chat_submit,10,false);

buttons = "";
btn_disp = "";

}

if(global.analog_pressed) {
global.p2toggle = !global.p2toggle
audio_play_sound(snd_chat_prompt,10,false);
}

if(!global.p2toggle) exit;








if(ds_list_find_value(height, 0) &gt;= 16 || ds_list_empty(height)) {;
if(global.action_pressed) {
buttons += "(X)";
btn_disp += "0";
audio_play_sound(snd_chat_input,10,false);
}
if(global.square_pressed) {
buttons += "(SQUARE)";
btn_disp += "3";
audio_play_sound(snd_chat_input,10,false);
}
if(global.triangle_pressed) {
buttons += "(TRIANGLE)";
btn_disp += "1";
audio_play_sound(snd_chat_input,10,false);
}
if(global.circle_pressed) {
buttons += "(CIRCLE)";
btn_disp += "2";
audio_play_sound(snd_chat_input,10,false);
}

if(global.r2_pressed) {
buttons += "(R2)";
btn_disp += ":";
audio_play_sound(snd_chat_input,10,false);
}
if(global.r1_pressed) {
buttons += "(R1)";
btn_disp += "9";
audio_play_sound(snd_chat_input,10,false);
}
if(global.l2_pressed) {
buttons += "(L2)";
btn_disp += "&lt;";
audio_play_sound(snd_chat_input,10,false);
}
if(global.l1_pressed) {
buttons += "(L1)";
btn_disp += ";";
audio_play_sound(snd_chat_input,10,false);
}

if(global.up_pressed) {
buttons += "(UP)";
btn_disp += "5";
audio_play_sound(snd_chat_input,10,false);
}
if(global.down_pressed) {
buttons += "(DOWN)";
btn_disp += "4";
audio_play_sound(snd_chat_input,10,false);
}
if(global.left_pressed) {
buttons += "(LEFT)";
btn_disp += "6";
audio_play_sound(snd_chat_input,10,false);
}
if(global.right_pressed) {
buttons += "(RIGHT)";
btn_disp += "7";
audio_play_sound(snd_chat_input,10,false);
}
if(global.start_pressed) {
buttons += "(START)";
btn_disp += "8";
audio_play_sound(snd_chat_input,10,false);
}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shader_reset();
d3d_set_projection_ortho(0, 0, global.gamewidth, global.gameheight, 0);
        var xcon = obj_camera_management.x+dcos(global.dir+90);
        var ycon = obj_camera_management.y-dsin(global.dir+90);
        var zcon = obj_camera_management.z-dsin(global.pitch);
//p2talk
        Convert_Prepare(obj_camera_management.x , obj_camera_management.y , obj_camera_management.z , xcon,ycon,zcon, 0,0,1, global.fov ,global.gamewidth/global.gameheight);
        Convert_3d(obj_player_rpg.x,obj_player_rpg.y,obj_player_rpg.z+(2.2*32),obj_camera_management.x,obj_camera_management.y,obj_camera_management.z)
            draw_set_halign(fa_center);
            draw_set_valign(fa_bottom);
            draw_set_color(c_white);
            //draw_set_alpha(abs(scr_sine(1,1)));
            
            //if(!instance_exists(obj_p2talk) &amp;&amp; !instance_exists(obj_fade) &amp;&amp; room != rm_bootup &amp;&amp; room != rm_title) {
               // instance_create(0,0,obj_p2talk);
            //} 
            
            if(instance_exists(obj_p2talk)) {    
                
                var btnh = string_height("A")
                draw_set_font(btnfnt);
                var badd = string_height("0")
                draw_text_transformed(x_2d*(.5+scale),(y_2d+btnh)*(.5+scale),obj_p2talk.btn_disp,(.5+scale),(.5+scale),0);
                draw_set_font(fnt_petscop);
            
                var i;
                for (i = 0; i &lt; ds_list_size(obj_p2talk.button_input); i += 1)
                {
                
                if(ds_list_find_value(obj_p2talk.alpha,i) &lt; 1) {
                ds_list_replace(obj_p2talk.alpha,i,ds_list_find_value(obj_p2talk.alpha,i)+(1/30));
                } else {
                ds_list_replace(obj_p2talk.alphasub,i,ds_list_find_value(obj_p2talk.alphasub,i)-(1/208));
                }
                
                if(ds_list_find_value(obj_p2talk.height,i) &lt; (i+1)*17) {
                ds_list_replace(obj_p2talk.height,i,ds_list_find_value(obj_p2talk.height,i)+(17/30));
                }
                //ds_list_delete(obj_p2talk.button_input,i);
                
                draw_set_alpha(ds_list_find_value(obj_p2talk.alpha,i) + ds_list_find_value(obj_p2talk.alphasub,i));
            
                draw_text_transformed(x_2d*(.5+scale),(y_2d-ds_list_find_value(obj_p2talk.height,i)+(badd*.4)+3)*(.5+scale),scr_p2_talk_converter(ds_list_find_value(obj_p2talk.button_input,i)),(.5+scale),(.5+scale),0);
                
                draw_set_alpha(1);
                //draw_text_transformed(x_2d*(.5+scale),(y_2d-ds_list_find_value(obj_p2talk.height,i)+(badd*.4))*(.5+scale),"Plays",(.5+scale),(.5+scale),0);
                if(ds_list_find_value(obj_p2talk.alphasub,i) &lt;= -1) {
                ds_list_delete(obj_p2talk.button_input,i);
                ds_list_delete(obj_p2talk.alpha,i);
                ds_list_delete(obj_p2talk.height,i);
                ds_list_delete(obj_p2talk.alphasub,i);
                }
                
                
                }   
        
            }
                        
            //draw_text_transformed(x_2d*(.5+scale),y_2d*(.5+scale),"egg",(.5+scale),(.5+scale),0);
            draw_set_alpha(1);
        draw_set_halign(fa_left);
        draw_set_valign(fa_top);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
