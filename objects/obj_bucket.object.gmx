<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    // Leftover Variable 
    //spec = false;
    z = 0;
    
    wavey_offset = 31;
    
    persist_check = false;
    
    collision_bucket=p3dc_begin_model();
    p3dc_add_cylinder(-12,-8,0,12,8,24,true,8);
    p3dc_end_model();
    
    collision_detect=p3dc_begin_model();
    p3dc_add_block(-12,-8,-1024,12,8,1024);
    p3dc_end_model();
    
    // Let's import the models....
    bucket = d3d_model_create();
    d3d_model_load(bucket,"General_Objects\evc_bucket.gmmod");
    
    wavey = d3d_model_create();
    d3d_model_load(wavey,"General_Objects\evc_bucket_wavy.gmmod");
    
    max_spd = 8/3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if(instance_exists(obj_fade) &amp;&amp; persist_check == true){
        var bucket_h, bucket_v, bucket_angle;
        bucket_angle = scr_player_getdir();
        bucket_h = lengthdir_x(34,bucket_angle);
        bucket_v = lengthdir_y(34,bucket_angle);
        x = obj_player_rpg.x + bucket_h;
        y = obj_player_rpg.y + bucket_v;
    }
    
    if(p3dc_check(collision_detect, x, y, 0, global.collision_map, 0, 0, 0)) {
    
    if (global.zcollisions = true &amp;&amp; p3dc_check(collision_bucket, x, y, z+13, global.collision_map, 0, 0, 0)) {
        z += 16
    } else if(global.zcollisions = true) {
        while (p3dc_check(collision_bucket,x, y, z+sign(max_spd), global.collision_map, 0, 0, 0)) {
            z += sign(max_spd)
        }
    }
        
    if (global.zcollisions = true &amp;&amp; !p3dc_check(collision_bucket, x, y, z-13, global.collision_map, 0, 0, 0)) {
        z -= 16
    } else if(global.zcollisions = true) {
        while (!p3dc_check(collision_bucket,x, y, z-sign(max_spd), global.collision_map, 0, 0, 0)) {
            z -= sign(max_spd)
        }
    }
    
    if(z &lt; -512) {
    z += 1024;
    }
    } else {
    z = 0
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_door">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if(instance_exists(obj_player_rpg)){
        if(persist_check == false){
            moveme = instance_create(0,0,obj_bucket_persist)
            moveme.what_room_do_i_go = other.target_room;
            persist_check = true;
        }
        
        obj_player_rpg.player_x = other.target_x;
        obj_player_rpg.player_y = other.target_y;
        obj_player_rpg.player_z = other.target_z;
        
        if(!instance_exists(obj_fade)) {
            var transition = instance_create(x,y,obj_fade);
            transition.fade_color = other.fade_color;
            transition.target_room = other.target_room;
            transition.transition_time = other.transition_time;
            transition.fade_spr = other.fade_spr;
            transition.fadein = other.fadein
            transition.fadeout = other.fadeout
            obj_player_rpg.fadedir = other.dir;
            obj_player_rpg.rot = other.exitdir;
            obj_player_rpg.doorsteps = other.doorsteps;
        }
        obj_player_rpg.cam_x = 0; 
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    draw_set_color(c_white)
    //shader_reset();
    
    d3d_transform_set_scaling(1,1,0.75);
    d3d_transform_set_translation(x,y,z);
    d3d_model_draw(bucket,0,0,0,sprite_get_texture(spr_evencare_rm7,1));
    //d3d_model_draw(wavey,0,0,wavey_offset,sprite_get_texture(spr_evencare_rm7,1));
    d3d_transform_set_identity()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
