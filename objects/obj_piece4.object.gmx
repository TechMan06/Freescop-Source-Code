<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_pieces4</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_pieces_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>indx = 0;
z = 6;
collided = false;
accl = 0;
vol = 0;
collect = 0;

key = save_data_get_key();

var _save_data = ds_map_find_value(obj_manager.save_data,key);
if(!is_undefined(_save_data) &amp;&amp; _save_data==true) {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.paused = false) {
indx += .2;
if(instance_exists(obj_player_rpg)) {
if(place_meeting(x,y,obj_player_rpg)) {
    if (collided = false) {
        ds_map_replace(obj_manager.save_data,key,true);
        collect = audio_play_sound(choose(snd_piece1,snd_piece2,snd_piece3),5,false)
        audio_sound_gain(collect,0,0)
        if (global.pieces &lt; 99999) global.pieces += 1;
        obj_counter.drop = true;
        obj_counter.alarm[0] = 90;
        collided = true;
    }
}

if (collided = true) {
audio_sound_gain(collect,vol,0)
vol = scr_approach(vol,.5,.1);
z = scr_approach(z,450,z/12);
y = scr_approach(y,225,z/16);

}
if (z &gt; 400) {
collided = false;
instance_destroy();
}
} else if(instance_exists(obj_player_fps)) {
if(place_meeting(x,y,obj_player_fps)) {
    if (collided = false) {
        collect = audio_play_sound(choose(snd_piece1,snd_piece2,snd_piece3),5,false)
        audio_sound_gain(collect,0,0)
        if (global.pieces &lt; 99999) global.pieces += 1;
        obj_counter.drop = true;
        obj_counter.alarm[0] = 90;
        collided = true;
    }
}

if (collided = true) {
audio_sound_gain(collect,vol,0)
vol = scr_approach(vol,.5,.1);
z = scr_approach(z,450,z/12);
y = scr_approach(y,225,z/16);

}
if (z &gt; 450) {
collided = false;
instance_destroy();
}
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white);
if(instance_exists(obj_player_rpg) &amp;&amp; !instance_exists(obj_player_fps)) {
draw_set_alpha_test(true);
d3d_transform_add_rotation_x(-global.pitch);
d3d_transform_add_rotation_z(global.dir)
d3d_transform_add_translation(x+16,y+32,z-6);
d3d_draw_wall(-16,0,32,16,0,0,sprite_get_texture(sprite_index,indx),1,1)
d3d_transform_set_identity();
} else if(instance_exists(obj_player_fps)) {
depth = floor(point_distance(x/32,y/32,obj_player_fps.x/32,obj_player_fps.y/32))
if(distance_to_object(obj_player_fps) &lt; 256+96+32) {
draw_set_alpha_test(true);
d3d_transform_add_rotation_z(global.dir-90)
d3d_transform_add_translation(x+16,y+32,z-6);
d3d_draw_wall(-16,0,32,16,0,0,sprite_get_texture(sprite_index,indx),1,1)
d3d_transform_set_identity();
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
