<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xpos = ds_list_create();
ypos = ds_list_create();
offset = false;
image_speed = 0;
image_index = 0;
sprite_index = spr_player_down_q;
z=0;
rot = spr_player_down_q;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check_pressed(ord('J'))) {
offset = true;
}

if(offset = false) {

x = -obj_player_rpg.x;
y = obj_player_rpg.y;
image_index = obj_player_rpg.image_index;

sprite_index = asset_get_index(sprite_get_name(obj_player_rpg.sprite_index)+"_q");

} else {

if (ds_list_find_value(xpos, 14) != undefined) {
    x = ds_list_find_value(xpos,14);
    y = ds_list_find_value(ypos,14);
    
    if(ds_list_find_value(xpos,13) &gt; x) {
    sprite_index = spr_player_move_right_q
    rot = spr_player_right_q
    } else if(ds_list_find_value(xpos,13) &lt; x) {
    sprite_index = spr_player_move_left_q
    rot = spr_player_left_q
    } else if(ds_list_find_value(ypos,13) &gt; y) {
    sprite_index = spr_player_move_down_q
    rot = spr_player_down_q
    } else if(ds_list_find_value(ypos,13) &lt; y) {
    sprite_index = spr_player_move_up_q
    rot = spr_player_down_q
    }
    
    if(x != xprevious || y != yprevious) {
    image_index += 1/8;
    } else {
    image_index = 0;
    sprite_index = rot;
    }
}
ds_list_insert(xpos,0,-obj_player_rpg.x);
ds_list_insert(ypos,0,obj_player_rpg.y);

    if(obj_player_rpg.rl_vel = 0 &amp;&amp; obj_player_rpg.fb_vel = 0 &amp;&amp; x = -obj_player_rpg.x &amp;&amp; y = obj_player_rpg.y) {
        ds_list_clear(ypos);
        ds_list_clear(xpos);
        offset = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw the player
draw_set_colour(c_white);
var pscale = 1;
d3d_transform_add_rotation_x(-global.pitch);
d3d_transform_add_rotation_z(global.dir)

d3d_transform_add_translation(x,y,z+(32*pscale));
d3d_draw_wall(-32*pscale,0,32*pscale,32*pscale,0,-32*pscale,sprite_get_texture(sprite_index,image_index),1,1);
d3d_transform_set_identity();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
