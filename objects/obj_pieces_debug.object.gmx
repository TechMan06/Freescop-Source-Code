<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_debug_grid</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scale = 32;
type = 0;
scrolleddown = false

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>        var xcon = obj_camera_management.x+dcos(global.dir+90);
        var ycon = obj_camera_management.y-dsin(global.dir+90);
        var zcon = obj_camera_management.z-dsin(global.pitch);

Convert_Prepare(obj_camera_management.x , obj_camera_management.y , obj_camera_management.z , xcon,ycon,zcon, 0,0,1, global.fov ,global.gamewidth/global.gameheight);
Convert_2d(window_mouse_get_x(),window_mouse_get_y(),obj_camera_management.x,obj_camera_management.y,obj_camera_management.z,window_get_width(),window_get_height());

x = (round((x_3d)/scale)*scale)-(scale/2);
y = (round((y_3d)/scale)*scale)-(scale/2);

if(!scrolleddown &amp;&amp; mouse_wheel_down()) {
scrolleddown = true;
scale -= 8
} else if(!mouse_wheel_down()) {
scrolleddown = false;
}

if(!scrolleddown &amp;&amp; mouse_wheel_up()) {
scrolleddown = true;
scale += 8
} else if(!mouse_wheel_down()) {
scrolleddown = false;
}

if(scale &lt; 8) {
scale = 32;
}
if(scale &gt; 32) {
scale = 8;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour_write_enable(true,true,true,false)
d3d_transform_add_scaling(scale/32,scale/32,scale/32)
d3d_transform_add_translation(x,y,1);
shader_reset();

d3d_draw_floor(80,-80,0,-80,80,0,sprite_get_texture(spr_debug_grid,0),1,1);
//draw_sprite(spr_debug_grid,0,0,0);
d3d_transform_set_identity();
d3d_set_projection_ortho(0, 0, global.gamewidth, global.gameheight, 0);

        var xcon = obj_camera_management.x+dcos(global.dir+90);
        var ycon = obj_camera_management.y-dsin(global.dir+90);
        var zcon = obj_camera_management.z-dsin(global.pitch);

        Convert_Prepare(obj_camera_management.x , obj_camera_management.y , obj_camera_management.z , xcon,ycon,zcon, 0,0,1, global.fov ,global.gamewidth/global.gameheight);
Convert_3d(x,y,0,obj_camera_management.x,obj_camera_management.y,obj_camera_management.z);
draw_sprite(spr_debug_hand,0,x_2d,y_2d-16+scr_sine(1,16));
draw_set_colour_write_enable(true,true,true,true)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
