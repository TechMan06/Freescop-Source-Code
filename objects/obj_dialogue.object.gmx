<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//string formatting!
text[0] = "Uhoh...#This is a broken Textbox!"
text_display[0] = "[$=c_red]Uhoh...#[$=c_white]This is a broken Textbox!"
//variables
message_current = 0;
done = false;
char = 0;
count = 0;
boxcolor = c_white;
timer = 0;
gain = 0;
snd = audio_play_sound(snd_text,1000,true);
audio_sound_gain(snd, 0, 0)
audio_play_sound(snd_snap,100,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

char = string_char_at(text[message_current], count);

var text_length = string_length(text[message_current]);

if (char = ".") {
    count += .05
} else {
    count += .5;
}


if(count &lt; text_length) {
    if (string_char_at(text[message_current], count) = "." ||
        string_char_at(text[message_current], count+1) = "." ||
        string_char_at(text[message_current], count+2) = "." ||
        string_char_at(text[message_current], count+3) = "." ||
        string_char_at(text[message_current], count+4) = "." ||
        string_char_at(text[message_current], count+5) = "." ||
        string_char_at(text[message_current], count+6) = "." ||
        string_char_at(text[message_current], count+7) = "." ||
        string_char_at(text[message_current], count+8) = "." ||
        string_char_at(text[message_current], count+9) = "." ||
        string_char_at(text[message_current], count+10) = "." ||
        string_char_at(text[message_current], count+11) = "." ||
        string_char_at(text[message_current], count+12) = ".") {
        if(audio_sound_get_gain(snd) &gt;= 0) {
        audio_sound_gain(snd, 0, 80*2)//50
        }
    } else {
        if(audio_sound_get_gain(snd) &lt;= 1) {
        audio_sound_gain(snd, 1, 80*10)
        }
    }
} else {
audio_sound_gain(snd, 0, 0)
}

    //next message
    if (global.action_pressed &amp;&amp; !global.paused) {
        //are we at the end
        if(count &gt; text_length) {
            //go to the next page
            message_current++;
            count = 0;
            if(message_current &gt; array_length_1d(text)-1) {
            audio_stop_sound(snd);
            audio_play_sound(snd_clap,10,false);
            instance_destroy();
            } else {
            audio_play_sound(snd_snap,10,false);
            }
        } else if(!global.paused) {
            // advance the count to the end of the text
            count = text_length;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shader_reset();
d3d_set_projection_ortho(0, 0, global.gamewidth, global.gameheight, 0);
draw_set_font(fnt_petscop);
if (array_length_1d(text) &gt; 0) {
    var text_length = string_length(text[message_current]);
    
    //decide which color to use
    if(boxcolor = c_white) {
    draw_set_colour(c_white);
    //draw the box
    draw_sprite(spr_text_boxes,0,0,0);
    //draw blinking cursor
    if(count &gt; text_length) {
        timer++;
        if (timer &lt; 30) draw_sprite(spr_cursor, 0, 265, 188);
        if (timer &gt; 60) timer = 0;
    } else {
    timer = 0;
    }
    //draw the text
    draw_set_colour(c_black);
    draw_text_custom(41-2,153-1,string_typing_custom(text_display[message_current],count),1,c_black )
    
    
    } else if(boxcolor = c_black) {
    draw_set_colour(c_white);
    //draw the box
    draw_sprite(spr_text_boxes,1,0,0);
    //draw blinking cursor
    if(count &gt; text_length) {
        timer++;
        if (timer &lt; 30) draw_sprite(spr_cursor, 1, 265, 188);
        if (timer &gt; 60) timer = 0;
    } else {
    timer = 0;
    }
    //draw the text
    draw_set_colour(c_white);
    draw_text_custom(41,135,string_typing_custom(text_display[message_current],count),1,c_white)
    }




}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
